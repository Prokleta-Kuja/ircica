@using QueryParams
@attribute [Microsoft.AspNetCore.Components.RouteAttribute(C.Routes.Search)]

<PageTitle>Search</PageTitle>
<div class="mt-1"></div>
<QuerySearch OnChange=SearchAsync InvokeOnInit AutoFocus />
@_message

@if (_items.Any())
{
    <table class="table">
    <thead>
        <tr>
            <Orderable Column=@SearchCol.Server Display="Server" Params=_params OnChange=RefreshListAsync />
            <Orderable Column=@SearchCol.Channel Display="Channel" Params=_params OnChange=RefreshListAsync />
            <Orderable Column=@SearchCol.Bot Display="Bot" Params=_params OnChange=RefreshListAsync />
            <Orderable Column=@SearchCol.Pack Display="Pack" Params=_params OnChange=RefreshListAsync />
            <Orderable Column=@SearchCol.Size Display="Size" Params=_params OnChange=RefreshListAsync />
            <Orderable Column=@SearchCol.Release Display="Release" Params=_params OnChange=RefreshListAsync />
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in _items)
            {
                <tr>
                    <td>@item.Server?.Name</td>
                    <td>@item.Channel?.Name</td>
                    <td>@item.Bot?.Name</td>
                    <td>@item.Pack</td>
                    <td>
                        <nobr>@C.GetHumanBytesSize(item.Size)</nobr>
                    </td>
                    <td>@item.Title</td>
                    <td><button class="btn btn-sm btn-primary" @onclick=@(()=>Download(item))>Download</button></td>
                </tr>
            }
        </tbody>
    </table>
}
